name: MacOS

on:
  push:
    branches:
      - '**'  # This will match all branches
  pull_request:
    branches:
      - '**'  # This will match all branches

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      - name: Detect Conan profile
        run: conan profile detect --force

      - name: Cache Conan packages
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.txt') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Build and install NovaLLM package
        run: |
          mkdir -p build
          cd build
          cmake -S .. -B . -DCMAKE_BUILD_TYPE=Release -DNOVA_LLM_BUILD_TESTS=ON -DNOVA_LLM_ENABLE_LOGGING=ON 
          cmake --build . -j4
          cmake --build . --target install

      - name: Conan create novallm package
        run: |
          conan create . --user=local --channel=testing --build=missing

      - name: Build and test (gtest)
        run: |
          mkdir -p build-test
          cd build-test
          conan install ../test --output-folder=. --build=missing
          cmake -S ../test -B . -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
          cmake --build . -j4
          ctest --build-config Debug

      - name: Build and run standalone
        run: |
          mkdir -p build-standalone
          cd build-standalone
          conan install ../standalone --output-folder=. --build=missing
          cmake -S ../standalone -B . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
          cmake --build . -j4
          ./main
