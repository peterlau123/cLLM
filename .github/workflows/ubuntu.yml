name: Ubuntu

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        enable_tests: [ON]
        enable_logging: [ON, OFF]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan
      
      - name: Detect Conan profile
        run: conan profile detect --force

      - name: Cache Conan packages
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.txt') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Configure
        run: |
          mkdir -p build
          cd build
          conan install .. --output-folder=. --build=missing
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DNOVA_LLM_BUILD_TESTS=${{ matrix.enable_tests }} \
            -DNOVA_LLM_ENABLE_LOGGING=${{ matrix.enable_logging }} \
            -DENABLE_TEST_COVERAGE=${{ matrix.build_type == 'Debug' }}

      - name: Build
        run: |
          cd build
          cmake --build . --config ${{ matrix.build_type }} -j4

      - name: Test
        if: matrix.enable_tests == 'ON'
        run: |
          cd build
          ctest --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Collect coverage
        if: matrix.build_type == 'Debug' && matrix.enable_tests == 'ON'
        run: |
          cd build
          bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-${{ matrix.build_type }}-${{ matrix.enable_logging }}
          path: build/libNovaLLM.so
          if-no-files-found: error
